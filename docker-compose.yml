services:
  base:
    image: alpine

  server-base:
    image: nginx:stable-alpine
    volumes:
      - .:/app
      - ./docker/nginx/templates:/etc/nginx/templates
      - ./error_log:/error_log
      - ./src:/app/public/packages/plugins/pdf-manager
    environment:
      PHP_VERSION: ${PHP_VERSION}
      PUBLIC_PATH: ${PUBLIC_PATH}
      WP_UPSTREAM: ${WP_UPSTREAM:-fpm}

  server:
    extends:
      service: server-base
    ports:
      - "80:80"
    links:
      - fpm

  php-base:
    build:
      context: ./docker/php
      target: base
      network: host
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_EXTRA_EXTENSIONS: ${PHP_EXTRA_EXTENSIONS:-}
        XDEBUG_VERSION: ${XDEBUG_VERSION:-}
    environment:
      PHP_XDEBUG_MODE: ${PHP_XDEBUG_MODE:-off}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PREFIX: ${DB_PREFIX:-wp_}
      AUTH_KEY: ${AUTH_KEY}
      SECURE_AUTH_KEY: ${SECURE_AUTH_KEY}
      LOGGED_IN_KEY: ${LOGGED_IN_KEY}
      NONCE_KEY: ${NONCE_KEY}
      AUTH_SALT: ${AUTH_SALT}
      SECURE_AUTH_SALT: ${SECURE_AUTH_SALT}
      LOGGED_IN_SALT: ${LOGGED_IN_SALT}
      NONCE_SALT: ${NONCE_SALT}
      WP_DEBUG: ${WP_DEBUG}
      WP_HOME: ${WP_HOME}
      WP_SITEURL: ${WP_SITEURL}
    volumes:
      - .:/app
      - ./src:/app/public/packages/plugins/pdf-manager
    extra_hosts:
      - host.docker.internal:${HOST_IP:-172.17.0.1}

  cli:
    extends:
      service: php-base
    build:
      target: cli
    depends_on:
      - db
    volumes:
      - ~/docker_cache/wp-cli:/.wp-cli/cache/

  fpm-base:
    extends:
      service: php-base
    build:
      target: fpm

  fpm:
    extends:
      service: fpm-base
    depends_on:
      - db

  db-base:
    extends:
      service: base
    image: ${DB_SERVICE}:${DB_SERVICE_VERSION:-latest}
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306"

  db:
    extends:
      service: db-base
    volumes:
      - dev_mysql_data:/var/lib/mysql
      - ./docker/mariadb/initdb.d:/docker-entrypoint-initdb.d

  composer:
    image: composer
    volumes:
      - .:/app
      - ~/.docker_cache/composer:/tmp/cache

  composer-7.4:
    extends:
      service: composer
    environment:
      COMPOSER: /app/composer.7.4.json

  phpqa:
    build:
      context: ./docker/php
      target: phpqa
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - ./:/app

  phpcs:
    build:
      context: ./docker/php
      target: phpcs
      args:
        PHP_VERSION: 7.4
        XDEBUG_VERSION: 3.1.6
    volumes:
      - ./:/app
    entrypoint: ["phpcs"]

  phpstan:
    extends:
      service: phpqa
    entrypoint: ["phpstan", "--memory-limit=512M"]

volumes:
  dev_mysql_data:
